# Docker Compose configuration for QR Generator
version: '3.8'

services:
  api:
    build: .
    container_name: qr_generator_api
    environment:
      - TZ=America/New_York
      # Application Configuration
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DEBUG=${DEBUG:-false}
      - BASE_URL=${BASE_URL:-https://10.1.6.12}
      # Database Configuration
      - DATABASE_URL=${DATABASE_URL:-sqlite:////app/data/qr_codes.db}
      - ENVIRONMENT=production # Production environment settings
      # Cookie settings (for CSRF protection only)
      - COOKIE_DOMAIN=${COOKIE_DOMAIN:-10.1.6.12}
    volumes:
      - qr_data:/app/data
      - ./backups:/app/backups
      - qr_logs:/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    # Will be uncommented in Phase 3 when switching to PostgreSQL
    #depends_on:
    #  postgres:
    #    condition: service_healthy
    labels:
      - "traefik.enable=true"
      # Default route (INTERNAL ONLY)
      - "traefik.http.routers.api.rule=Host(`10.1.6.12`) && PathPrefix(`/`)"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
      - "traefik.http.routers.api.entrypoints=web,websecure"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.priority=10"
      
      # Public QR redirect route (PUBLIC on 130.156.44.52)
      - "traefik.http.routers.api-public-qr.rule=Host(`130.156.44.52`) && PathPrefix(`/r/`)"
      - "traefik.http.routers.api-public-qr.entrypoints=web,websecure"
      - "traefik.http.routers.api-public-qr.tls=true"
      - "traefik.http.routers.api-public-qr.service=api"
      - "traefik.http.routers.api-public-qr.priority=500"
      
      # Domain-specific route for future use with web.hccc.edu
      - "traefik.http.routers.api-domain.rule=Host(`web.hccc.edu`) && PathPrefix(`/`)"
      - "traefik.http.routers.api-domain.entrypoints=web,websecure"
      - "traefik.http.routers.api-domain.tls=true"
      - "traefik.http.routers.api-domain.service=api"
      - "traefik.http.routers.api-domain.priority=100"
      
      # Force HTTPS redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=https://10.1.6.12"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"
      - "traefik.http.routers.api.middlewares=redirect-to-https@docker,cors@docker"
      - "traefik.http.routers.api-domain.middlewares=redirect-to-https@docker,cors@docker"
      - "traefik.http.routers.api-public-qr.middlewares=redirect-to-https@docker"

  # PostgreSQL service (added in Phase 1 of migration)
  postgres:
    image: postgres:15
    container_name: qr_generator_postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-pguser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-pgpassword}
      - POSTGRES_DB=${POSTGRES_DB:-qrdb}
      - TZ=America/New_York
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-pguser}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    # Expose port only internally, not to host
    expose:
      - "5432"

  traefik:
    image: traefik:v2.10
    container_name: qr_generator_traefik
    # Use existing configuration files instead of command-line flags
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/certs:ro
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./dynamic_conf.yml:/etc/traefik/dynamic_conf.yml:ro
      - ./users.htpasswd:/etc/traefik/users.htpasswd:ro
      - traefik_logs:/logs/traefik
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik Dashboard
      - "8082:8082"  # Metrics endpoint
    restart: unless-stopped

networks:
  default:
    name: qr_generator_network
    driver: bridge

volumes:
  qr_data:
    driver: local
  qr_logs:
    driver: local
  traefik_logs:
    driver: local
  postgres_data:
    driver: local 