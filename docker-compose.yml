# Docker Compose configuration for QR Generator
version: '3.8'

services:
  api:
    build: .
    container_name: qr_generator_api
    environment:
      - DATABASE_URL=sqlite:////app/data/qr_codes.db
      - ENVIRONMENT=${ENVIRONMENT:-development} # switch to production and remove hot-reloading for production
      # SSO Configuration
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - SESSION_SECRET_KEY=${SESSION_SECRET_KEY}
      - REDIRECT_URI=${REDIRECT_URI:-http://localhost/auth/callback}
    volumes:
      - ./data:/app/data
      - ./logs:/logs
      - ./app:/app/app  # Mount app directory for hot reloading
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/`)"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
      - "traefik.http.routers.api.entrypoints=web,websecure"
      - "traefik.http.routers.api.tls=true"
      # Force HTTPS redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=https://localhost"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"
      - "traefik.http.routers.api.middlewares=redirect-to-https@docker,cors@docker"

  traefik:
    image: traefik:v2.10
    container_name: qr_generator_traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.traefik.address=:8080"
      - "--entrypoints.metrics.address=:8082"
      # Enable TLS with self-signed certificate
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certresolver=default"
      # Use self-signed certificate for local development
      - "--certificatesresolvers.default.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.default.acme.email=dev@localhost"
      - "--certificatesresolvers.default.acme.storage=/certificates/acme.json"
      - "--certificatesresolvers.default.acme.tlschallenge=true"
      # Force HTTP to HTTPS redirect
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      # Enable dashboard
      - "--api.dashboard=true"
      - "--api.insecure=true"
      # Enable Access Logs
      - "--accesslog=true"
      - "--accesslog.filepath=/logs/traefik/access.log"
      - "--accesslog.format=json"
      # Enable Metrics
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.entrypoint=metrics"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik Dashboard
      - "8082:8082"  # Metrics endpoint
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certificates:/certificates  # Mount certificates directory
      - ./logs/traefik:/logs/traefik  # Mount logs directory
    restart: unless-stopped

networks:
  default:
    name: qr_generator_network
    driver: bridge 