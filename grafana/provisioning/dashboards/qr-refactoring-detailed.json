{
  "id": null,
  "title": "QR Refactoring Detailed Analysis",
  "tags": ["qr-system", "refactoring", "detailed", "observatory"],
  "style": "dark",
  "timezone": "browser",
  "refresh": "15s",
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "panels": [
    {
      "id": 1,
      "title": "üîÑ Refactoring Phase Status",
      "type": "text",
      "gridPos": {"h": 4, "w": 24, "x": 0, "y": 0},
      "options": {
        "mode": "markdown",
        "content": "# Observatory-First Refactoring Status\n\n## Current Phase: **Phase -1 - Observatory Setup** ‚úÖ\n\n### Completed:\n- ‚úÖ **M.1**: Prometheus deployed and scraping\n- ‚úÖ **M.2**: Grafana deployed with dashboards\n- ‚úÖ **M.3**: Baseline dashboards operational\n\n### Next Steps:\n- üîÑ **M.4**: Critical alerts setup\n- ‚è≥ **M.5**: 1-week baseline collection\n\n**üéØ Goal**: Transform high-risk refactoring into controlled, data-driven process"
      }
    },
    {
      "id": 2,
      "title": "QR Generation Performance Comparison",
      "type": "timeseries",
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 4},
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(app_http_request_duration_seconds_bucket{endpoint=\"/api/v1/qr/static\", method=\"POST\"}[1h])) by (le)) * 1000 or vector(0)",
          "legendFormat": "Static QR Creation P95",
          "refId": "A"
        },
        {
          "expr": "histogram_quantile(0.95, sum(rate(app_http_request_duration_seconds_bucket{endpoint=\"/api/v1/qr/dynamic\", method=\"POST\"}[1h])) by (le)) * 1000 or vector(0)",
          "legendFormat": "Dynamic QR Creation P95",
          "refId": "B"
        },
        {
          "expr": "histogram_quantile(0.95, sum(rate(app_http_request_duration_seconds_bucket{endpoint=~\"/api/v1/qr/.*/image\"}[1h])) by (le)) * 1000 or vector(0)",
          "legendFormat": "Image Generation P95",
          "refId": "C"
        },
        {
          "expr": "histogram_quantile(0.50, sum(rate(app_http_request_duration_seconds_bucket{endpoint=\"/api/v1/qr/static\", method=\"POST\"}[1h])) by (le)) * 1000 or vector(0)",
          "legendFormat": "Static QR Creation P50",
          "refId": "D"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "ms",
          "min": 0,
          "thresholds": {
            "steps": [
              {"color": "green", "value": null},
              {"color": "yellow", "value": 50},
              {"color": "red", "value": 100}
            ]
          }
        }
      },
      "options": {
        "tooltip": {"mode": "multi"},
        "legend": {"displayMode": "table", "placement": "bottom"}
      }
    },
    {
      "id": 3,
      "title": "CRUD Operations Performance",
      "type": "timeseries",
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 4},
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(app_http_request_duration_seconds_bucket{endpoint=~\"/api/v1/qr/.+\", method=\"PUT\"}[1h])) by (le)) * 1000 or vector(0)",
          "legendFormat": "QR Update P95",
          "refId": "A"
        },
        {
          "expr": "histogram_quantile(0.95, sum(rate(app_http_request_duration_seconds_bucket{endpoint=~\"/api/v1/qr/.+\", method=\"DELETE\"}[1h])) by (le)) * 1000 or vector(0)",
          "legendFormat": "QR Delete P95",
          "refId": "B"
        },
        {
          "expr": "histogram_quantile(0.95, sum(rate(app_http_request_duration_seconds_bucket{endpoint=\"/api/v1/qr\", method=\"GET\"}[1h])) by (le)) * 1000 or vector(0)",
          "legendFormat": "QR List P95",
          "refId": "C"
        },
        {
          "expr": "histogram_quantile(0.95, sum(rate(app_http_request_duration_seconds_bucket{endpoint=~\"/api/v1/qr/.+\", method=\"GET\"}[1h])) by (le)) * 1000 or vector(0)",
          "legendFormat": "QR Get P95",
          "refId": "D"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "ms",
          "min": 0
        }
      },
      "options": {
        "tooltip": {"mode": "multi"},
        "legend": {"displayMode": "table", "placement": "bottom"}
      }
    },
    {
      "id": 4,
      "title": "QR Creation Rate by Type",
      "type": "stat",
      "gridPos": {"h": 6, "w": 8, "x": 0, "y": 12},
      "targets": [
        {
          "expr": "sum(rate(app_http_requests_total{endpoint=\"/api/v1/qr/static\", method=\"POST\", status=~\"2..\"}[5m])) * 60 or vector(0)",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "reqps",
          "displayName": "Static QR/min",
          "thresholds": {
            "steps": [
              {"color": "green", "value": null},
              {"color": "yellow", "value": 10},
              {"color": "red", "value": 50}
            ]
          }
        }
      },
      "options": {
        "colorMode": "value",
        "graphMode": "area"
      }
    },
    {
      "id": 5,
      "title": "Dynamic QR Creation Rate",
      "type": "stat",
      "gridPos": {"h": 6, "w": 8, "x": 8, "y": 12},
      "targets": [
        {
          "expr": "sum(rate(app_http_requests_total{endpoint=\"/api/v1/qr/dynamic\", method=\"POST\", status=~\"2..\"}[5m])) * 60 or vector(0)",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "reqps",
          "displayName": "Dynamic QR/min",
          "thresholds": {
            "steps": [
              {"color": "green", "value": null},
              {"color": "yellow", "value": 10},
              {"color": "red", "value": 50}
            ]
          }
        }
      },
      "options": {
        "colorMode": "value",
        "graphMode": "area"
      }
    },
    {
      "id": 6,
      "title": "Image Generation Success Rate",
      "type": "gauge",
      "gridPos": {"h": 6, "w": 8, "x": 16, "y": 12},
      "targets": [
        {
          "expr": "sum(rate(app_http_requests_total{endpoint=~\"/api/v1/qr/.*/image\", status=~\"2..\"}[1h])) / sum(rate(app_http_requests_total{endpoint=~\"/api/v1/qr/.*/image\"}[1h])) * 100 or vector(100)",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "percent",
          "min": 0,
          "max": 100,
          "thresholds": {
            "steps": [
              {"color": "red", "value": null},
              {"color": "yellow", "value": 95},
              {"color": "green", "value": 99}
            ]
          }
        }
      },
      "options": {
        "showThresholdLabels": true,
        "showThresholdMarkers": true
      }
    },
    {
      "id": 7,
      "title": "Database Operation Patterns",
      "type": "timeseries",
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 18},
      "targets": [
        {
          "expr": "sum(rate(app_http_requests_total{endpoint=\"/api/v1/qr/static\", method=\"POST\", status=~\"2..\"}[5m])) * 60 or vector(0)",
          "legendFormat": "QR Inserts/min",
          "refId": "A"
        },
        {
          "expr": "sum(rate(app_http_requests_total{endpoint=~\"/api/v1/qr/.+\", method=\"PUT\", status=~\"2..\"}[5m])) * 60 or vector(0)",
          "legendFormat": "QR Updates/min",
          "refId": "B"
        },
        {
          "expr": "sum(rate(app_http_requests_total{endpoint=~\"/api/v1/qr/.+\", method=\"DELETE\", status=~\"2..\"}[5m])) * 60 or vector(0)",
          "legendFormat": "QR Deletes/min",
          "refId": "C"
        },
        {
          "expr": "sum(rate(app_http_requests_total{endpoint=\"/api/v1/qr\", method=\"GET\", status=~\"2..\"}[5m])) * 60 or vector(0)",
          "legendFormat": "QR List Queries/min",
          "refId": "D"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "reqps",
          "min": 0
        }
      },
      "options": {
        "tooltip": {"mode": "multi"},
        "legend": {"displayMode": "table", "placement": "bottom"}
      }
    },
    {
      "id": 8,
      "title": "Critical Path Performance (QR Redirects)",
      "type": "timeseries",
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 18},
      "targets": [
        {
          "expr": "histogram_quantile(0.50, sum(rate(app_http_request_duration_seconds_bucket{endpoint=~\"/r/.*\"}[1h])) by (le)) * 1000 or vector(0)",
          "legendFormat": "P50 Redirect Latency",
          "refId": "A"
        },
        {
          "expr": "histogram_quantile(0.95, sum(rate(app_http_request_duration_seconds_bucket{endpoint=~\"/r/.*\"}[1h])) by (le)) * 1000 or vector(0)",
          "legendFormat": "P95 Redirect Latency",
          "refId": "B"
        },
        {
          "expr": "histogram_quantile(0.99, sum(rate(app_http_request_duration_seconds_bucket{endpoint=~\"/r/.*\"}[1h])) by (le)) * 1000 or vector(0)",
          "legendFormat": "P99 Redirect Latency",
          "refId": "C"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "ms",
          "min": 0,
          "thresholds": {
            "steps": [
              {"color": "green", "value": null},
              {"color": "yellow", "value": 10},
              {"color": "red", "value": 30}
            ]
          }
        }
      },
      "options": {
        "tooltip": {"mode": "multi"},
        "legend": {"displayMode": "table", "placement": "bottom"}
      }
    },
    {
      "id": 9,
      "title": "Error Analysis by Operation",
      "type": "table",
      "gridPos": {"h": 8, "w": 24, "x": 0, "y": 26},
      "targets": [
        {
          "expr": "sum(rate(app_http_requests_total{status=~\"[45]..\"}[1h])) by (endpoint, method, status) * 3600 or vector(0)",
          "format": "table",
          "instant": true,
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "custom": {
            "displayMode": "basic"
          }
        },
        "overrides": [
          {
            "matcher": {"id": "byName", "options": "Value"},
            "properties": [
              {"id": "displayName", "value": "Errors/hour"},
              {"id": "unit", "value": "short"}
            ]
          }
        ]
      },
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "__name__": true,
              "Time": true,
              "instance": true,
              "job": true
            },
            "indexByName": {},
            "renameByName": {}
          }
        }
      ]
    }
  ],
  "links": [
    {
      "title": "System Health",
      "url": "/d/health/qr-system-health",
      "type": "dashboards"
    },
    {
      "title": "Performance Baseline",
      "url": "/d/refactor/qr-refactoring-progress",
      "type": "dashboards"
    }
  ]
} 