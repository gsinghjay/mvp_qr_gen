{
  "id": null,
  "title": "DEV - Service Health & Dependencies",
  "tags": ["development", "service-health", "dependencies", "api", "monitoring"],
  "style": "dark",
  "timezone": "browser",
  "refresh": "15s",
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "panels": [
    {
      "id": 1,
      "title": "ðŸ”§ Service Health & Dependencies",
      "type": "text",
      "gridPos": {"h": 3, "w": 24, "x": 0, "y": 0},
      "options": {
        "mode": "markdown",
        "content": "# Service Health & Dependencies Dashboard\n\n**Audience**: Development team and DevOps engineers\n**Purpose**: Monitor API health, service dependencies, FastAPI metrics, and external service integrations\n\nðŸŽ¯ **Focus Areas**: API endpoint health, dependency status, health checks, and service communication patterns"
      }
    },
    {
      "id": 2,
      "title": "API Health Status",
      "type": "stat",
      "gridPos": {"h": 6, "w": 8, "x": 0, "y": 3},
      "targets": [
        {
          "expr": "sum(rate(app_http_requests_total{endpoint=\"/health\", status=\"200\"}[1h])) / sum(rate(app_http_requests_total{endpoint=\"/health\"}[1h])) * 100 or vector(0)",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "percent",
          "displayName": "Health Check Success",
          "thresholds": {
            "steps": [
              {"color": "red", "value": null},
              {"color": "yellow", "value": 95},
              {"color": "green", "value": 99}
            ]
          }
        }
      },
      "options": {
        "colorMode": "background",
        "graphMode": "none"
      }
    },
    {
      "id": 3,
      "title": "API Response Time",
      "type": "stat",
      "gridPos": {"h": 6, "w": 8, "x": 8, "y": 3},
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(app_http_request_duration_seconds_bucket[1h])) by (le)) * 1000 or vector(0)",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "ms",
          "displayName": "P95 Response Time",
          "thresholds": {
            "steps": [
              {"color": "green", "value": null},
              {"color": "yellow", "value": 100},
              {"color": "red", "value": 500}
            ]
          }
        }
      },
      "options": {
        "colorMode": "background",
        "graphMode": "area"
      }
    },
    {
      "id": 4,
      "title": "API Error Rate",
      "type": "stat",
      "gridPos": {"h": 6, "w": 8, "x": 16, "y": 3},
      "targets": [
        {
          "expr": "(sum(rate(app_http_requests_total{status=~\"5..\"}[1h])) / sum(rate(app_http_requests_total[1h]))) * 100 or vector(0)",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "percent",
          "displayName": "5xx Error Rate",
          "thresholds": {
            "steps": [
              {"color": "green", "value": null},
              {"color": "yellow", "value": 1},
              {"color": "red", "value": 5}
            ]
          }
        }
      },
      "options": {
        "colorMode": "background",
        "graphMode": "none"
      }
    },
    {
      "id": 5,
      "title": "API Response Time by Endpoint",
      "type": "timeseries",
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 9},
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(app_http_request_duration_seconds_bucket[1h])) by (le, endpoint)) or vector(0)",
          "legendFormat": "{{endpoint}} (P95)",
          "refId": "A"
        },
        {
          "expr": "histogram_quantile(0.50, sum(rate(app_http_request_duration_seconds_bucket[1h])) by (le, endpoint)) or vector(0)",
          "legendFormat": "{{endpoint}} (P50)",
          "refId": "B"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "s",
          "min": 0,
          "thresholds": {
            "steps": [
              {"color": "green", "value": null},
              {"color": "yellow", "value": 0.1},
              {"color": "red", "value": 0.5}
            ]
          }
        }
      },
      "options": {
        "tooltip": {"mode": "multi"},
        "legend": {"displayMode": "table", "placement": "bottom"}
      }
    },
    {
      "id": 6,
      "title": "Request Rate by Endpoint",
      "type": "timeseries",
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 9},
      "targets": [
        {
          "expr": "sum(rate(app_http_requests_total{endpoint=~\"/r/.*\",status=\"302\"}[5m])) * 60 or vector(0)",
          "legendFormat": "QR Redirects/min",
          "refId": "A"
        },
        {
          "expr": "sum(rate(app_http_requests_total{endpoint=~\"/api/v1/qr/.*/image\"}[5m])) * 60 or vector(0)",
          "legendFormat": "Image Generation/min",
          "refId": "B"
        },
        {
          "expr": "sum(rate(app_http_requests_total{endpoint=\"/health\"}[5m])) * 60 or vector(0)",
          "legendFormat": "Health Checks/min",
          "refId": "C"
        },
        {
          "expr": "sum(rate(app_http_requests_total{endpoint=\"/qr-create\"}[5m])) * 60 or vector(0)",
          "legendFormat": "QR Create Requests/min",
          "refId": "D"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "reqps",
          "min": 0
        }
      },
      "options": {
        "tooltip": {"mode": "multi"},
        "legend": {"displayMode": "table", "placement": "bottom"}
      }
    },
    {
      "id": 7,
      "title": "HTTP Status Code Distribution",
      "type": "timeseries",
      "gridPos": {"h": 8, "w": 24, "x": 0, "y": 17},
      "targets": [
        {
          "expr": "sum(rate(app_http_requests_total{status=~\"2..\"}[5m])) by (status) or vector(0)",
          "legendFormat": "2xx - {{status}}",
          "refId": "A"
        },
        {
          "expr": "sum(rate(app_http_requests_total{status=~\"3..\"}[5m])) by (status) or vector(0)",
          "legendFormat": "3xx - {{status}}",
          "refId": "B"
        },
        {
          "expr": "sum(rate(app_http_requests_total{status=~\"4..\"}[5m])) by (status) or vector(0)",
          "legendFormat": "4xx - {{status}}",
          "refId": "C"
        },
        {
          "expr": "sum(rate(app_http_requests_total{status=~\"5..\"}[5m])) by (status) or vector(0)",
          "legendFormat": "5xx - {{status}}",
          "refId": "D"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "reqps",
          "min": 0
        }
      },
      "options": {
        "tooltip": {"mode": "multi"},
        "legend": {"displayMode": "table", "placement": "bottom"}
      }
    },
    {
      "id": 8,
      "title": "Database Health",
      "type": "stat",
      "gridPos": {"h": 6, "w": 8, "x": 0, "y": 25},
      "targets": [
        {
          "expr": "pg_up{job=\"postgres\"} or vector(0)",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "mappings": [
            {
              "options": {
                "0": {"color": "red", "index": 0, "text": "DOWN"},
                "1": {"color": "green", "index": 1, "text": "UP"}
              },
              "type": "value"
            }
          ],
          "displayName": "PostgreSQL Status",
          "thresholds": {
            "steps": [
              {"color": "red", "value": null},
              {"color": "green", "value": 1}
            ]
          }
        }
      },
      "options": {
        "colorMode": "background",
        "graphMode": "none"
      }
    },
    {
      "id": 9,
      "title": "Monitoring Stack Health",
      "type": "stat",
      "gridPos": {"h": 6, "w": 8, "x": 8, "y": 25},
      "targets": [
        {
          "expr": "up{job=\"prometheus\"} or vector(0)",
          "refId": "A"
        },
        {
          "expr": "up{job=\"traefik\"} or vector(0)",
          "refId": "B"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "mappings": [
            {
              "options": {
                "0": {"color": "red", "index": 0, "text": "DOWN"},
                "1": {"color": "green", "index": 1, "text": "UP"}
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "steps": [
              {"color": "red", "value": null},
              {"color": "green", "value": 1}
            ]
          }
        },
        "overrides": [
          {
            "matcher": {"id": "byFrameRefID", "options": "A"},
            "properties": [{"id": "displayName", "value": "Prometheus"}]
          },
          {
            "matcher": {"id": "byFrameRefID", "options": "B"},
            "properties": [{"id": "displayName", "value": "Traefik"}]
          }
        ]
      },
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "horizontal"
      }
    },
    {
      "id": 10,
      "title": "FastAPI Application Health",
      "type": "stat",
      "gridPos": {"h": 6, "w": 8, "x": 16, "y": 25},
      "targets": [
        {
          "expr": "up{job=\"qr-app\"} or vector(0)",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "mappings": [
            {
              "options": {
                "0": {"color": "red", "index": 0, "text": "DOWN"},
                "1": {"color": "green", "index": 1, "text": "UP"}
              },
              "type": "value"
            }
          ],
          "displayName": "QR Application",
          "thresholds": {
            "steps": [
              {"color": "red", "value": null},
              {"color": "green", "value": 1}
            ]
          }
        }
      },
      "options": {
        "colorMode": "background",
        "graphMode": "none"
      }
    },
    {
      "id": 11,
      "title": "FastAPI Runtime Metrics",
      "type": "timeseries",
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 31},
      "targets": [
        {
          "expr": "go_goroutines{job=\"qr-app\"} or vector(0)",
          "legendFormat": "Active Goroutines",
          "refId": "A"
        },
        {
          "expr": "go_threads{job=\"qr-app\"} or vector(0)",
          "legendFormat": "OS Threads",
          "refId": "B"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "short",
          "min": 0
        }
      },
      "options": {
        "tooltip": {"mode": "multi"},
        "legend": {"displayMode": "table", "placement": "bottom"}
      }
    },
    {
      "id": 12,
      "title": "Service Dependencies Summary",
      "type": "table",
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 31},
      "targets": [
        {
          "expr": "up{job=~\"qr-app|postgres|prometheus|traefik\"} or vector(0)",
          "format": "table",
          "instant": true,
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "custom": {
            "displayMode": "basic"
          }
        },
        "overrides": [
          {
            "matcher": {"id": "byName", "options": "Value"},
            "properties": [
              {"id": "displayName", "value": "Status"},
              {"id": "unit", "value": "short"},
              {"id": "custom.displayMode", "value": "color-background"},
              {"id": "thresholds", "value": {
                "steps": [
                  {"color": "red", "value": null},
                  {"color": "green", "value": 1}
                ]
              }}
            ]
          }
        ]
      },
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "__name__": true,
              "Time": true
            },
            "indexByName": {},
            "renameByName": {}
          }
        }
      ]
    }
  ],
  "links": [
    {
      "title": "Application Deep Dive",
      "url": "/d/dev-app-deep-dive/dev-qr-application-deep-dive-refactoring",
      "type": "dashboards"
    },
    {
      "title": "System Overview",
      "url": "/d/ops-system-overview/ops-system-infrastructure-overview",
      "type": "dashboards"
    },
    {
      "title": "Database Health",
      "url": "/d/dba-postgresql/dba-postgresql-performance-health",
      "type": "dashboards"
    }
  ]
} 