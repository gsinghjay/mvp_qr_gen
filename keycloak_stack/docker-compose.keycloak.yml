version: '3'

services:
  # PostgreSQL Database for Keycloak
  keycloak-db:
    image: postgres:15
    container_name: keycloak_postgres
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=${KC_DB_USERNAME:-keycloak}
      - POSTGRES_PASSWORD=${KC_DB_PASSWORD:-keycloak_password}
      - TZ=America/New_York
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KC_DB_USERNAME:-keycloak} -d keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - shared-services-network

  # Keycloak Service
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: keycloak_service
    command: start-dev
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-db:5432/keycloak
      - KC_DB_USERNAME=${KC_DB_USERNAME:-keycloak}
      - KC_DB_PASSWORD=${KC_DB_PASSWORD:-keycloak_password}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN:-admin}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD:-admin_password}
      - KC_PROXY=edge
      - KC_HTTP_ENABLED=true
      - KC_HTTP_PORT=8080
      - KC_HOSTNAME=auth.hccc.edu
      - KC_HOSTNAME_URL=https://auth.hccc.edu
      - KC_HOSTNAME_STRICT=false
      - TZ=America/New_York
    ports:
      - "8180:8080"
    volumes:
      - keycloak_data:/opt/keycloak/data
    depends_on:
      keycloak-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - shared-services-network

networks:
  shared-services-network:
    name: qr_generator_network
    external: true

volumes:
  keycloak_postgres_data:
    driver: local
  keycloak_data:
    driver: local 